5/500
10/100
1/100
5/10
1/10
10/0.1
5/10
4/10
3/10
2/10
1/10
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/analyticalModel.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/prediction-LinearRegression.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/prediction-RandomForest.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/prediction-RandomForest.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/prediction-SVM.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/GraphicsTechniques.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/formatData.R', echo=TRUE)
dirpath <- "~/Dropbox/Doctorate/svm-gpuperf/data/"
setwd(paste(dirpath, sep=""))
eventsName  <- read.csv(paste("./eventsName.csv",sep=","),header = TRUE)
dirpath <- "~/Dropbox/Doctorate/svm-gpuperf/"
setwd(paste(dirpath, sep=""))
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=40)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(2, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 2))
ggsave(paste("./images/SVM-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
write.csv(result, file = "./Results/MSCoalesced-RF.csv")
# ggsave(paste("./images/ResultsLearning/ResultLinearRegression.png",sep=""), Graph, height=10, width=16)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/RandomForest-MMSC.R', echo=TRUE)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=40)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(2, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 2))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
write.csv(result, file = "./Results/RF-MMSC.csv")
# ggsave(paste("./images/ResultsLearning/ResultLinearRegression.png",sep=""), Graph, height=10, width=16)
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=40)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 2))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/RandomForest-MMSC.R', echo=TRUE)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(2, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(3, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(2.5, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(2.25, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=20),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=5),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=1),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(3, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
write.csv(result, file = "./Results/RF-MMSC.csv")
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(4, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(4, "lines")) +
guides(col = guide_legend(nrow = 2))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(10, "lines")) +
guides(col = guide_legend(nrow = 2))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=25)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 2))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
write.csv(result, file = "./Results/RF-MMSC.csv")
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=18)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(2, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=15)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=15)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(4, "lines")) +
guides(col = guide_legend(nrow = 1))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=2.5, outlier.size = 5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Random Forest of MMSC") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.title = element_text(family = "Times", face="bold", size=50)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=50, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=25)) +
# theme(legend.position = "none") +
theme(legend.key.size = unit(1, "cm")) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
guides(col = guide_legend(nrow = 2))
ggsave(paste("./images/RF-MMSC.pdf",sep=""), Graph, device = pdf, height=10, width=16)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/RandomForest-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/LinearRegression-MMSC.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/LinearRegression.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/LinearRegression.R', echo=TRUE)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=1.5, outlier.size = 2.5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Linear Regression") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=40)) +
theme(axis.title = element_text(family = "Times", face="bold", size=30)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=20, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
# facet_grid(.~Apps, scales="fixed")
facet_wrap(~Apps, ncol=3, scales="fixed") +
theme(strip.text = element_text(size=20))
ggsave(paste("./images/LinearRegression.pdf",sep=""), Graph, device = pdf, height=10, width=16)
write.csv(result, file = "./Results/LinearRegression.csv")
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SupportVectorMachines.R', echo=TRUE)
Graph <- ggplot(data=result, aes(x=Gpus, y=accuracy, group=Gpus, col=Gpus)) +
geom_boxplot( size=1.5, outlier.size = 2.5) + scale_y_continuous(limits =  c(0, 2.5)) +
stat_boxplot(geom ='errorbar') +
xlab(" ") +
theme_bw() +
ggtitle("Support Vector Machines") +
ylab(expression(paste("Accuracy ",T[k]/T[m] ))) +
theme(plot.title = element_text(family = "Times", face="bold", size=40)) +
theme(axis.title = element_text(family = "Times", face="bold", size=30)) +
theme(axis.text  = element_text(family = "Times", face="bold", size=20, colour = "Black")) +
theme(axis.text.x=element_blank()) +
theme(legend.title  = element_text(family = "Times", face="bold", size=0)) +
theme(legend.text  = element_text(family = "Times", face="bold", size=20)) +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key=element_rect(size=0),
legend.key.size = unit(5, "lines")) +
# facet_grid(.~Apps, scales="fixed")
facet_wrap(~Apps, ncol=3, scales="free_y") +
theme(strip.text = element_text(size=20))
ggsave(paste("./images/SupportVectorMachine.pdf",sep=""), Graph, device = pdf, height=10, width=16)
write.csv(result, file = "./Results/SVM.csv")
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/RandomForest.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/RandomForest.R', echo=TRUE)
source('~/Dropbox/Doctorate/svm-gpuperf/R-code/SecondScenario-AllTechniques.R', echo=TRUE)
